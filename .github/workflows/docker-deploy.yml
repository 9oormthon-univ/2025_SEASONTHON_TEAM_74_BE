name: Docker Hub CD

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/motu
          tags: |
            type=ref,event=branch
            type=sha,prefix=develop-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/app
            # 환경 변수 파일 확인
            if [ ! -f .env ]; then
              echo "Error: .env file not found!"
              exit 1
            fi
            # Docker Hub에서 최신 이미지 pull
            echo "Pulling latest Docker image..."
            docker-compose pull app
            # 기존 컨테이너 중지 및 제거
            echo "Stopping existing containers..."
            docker-compose down
            # 사용하지 않는 Docker 이미지 정리
            echo "Cleaning up unused Docker images..."
            docker image prune -f
            # 새로운 컨테이너 시작
            echo "Starting new containers..."
            docker-compose up -d
            # 헬스체크
            echo "Waiting for application to start..."
            sleep 30
            # 애플리케이션 상태 확인
            if curl -f http://localhost:8080/health > /dev/null 2>&1; then
              echo "✅ Deployment successful! Application is running."
            else
              echo "❌ Deployment failed! Application is not responding."
              echo "Checking logs..."
              docker-compose logs app
              exit 1
            fi
            echo "🎉 Deployment completed successfully!"
